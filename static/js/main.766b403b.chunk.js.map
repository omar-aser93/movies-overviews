{"version":3,"sources":["components/Movie.js","components/GetMovies.js","App.js","index.js"],"names":["Movie","title","poster_path","overview","vote_average","release_date","id","imageApi","useState","videos","setVideos","trailer","open","setOpen","className","onClick","fetch","then","res","json","data","results","src","alt","toFixed","Modal","onClose","Box","sx","position","top","left","transform","width","bgcolor","border","boxShadow","p","map","video","name","height","key","frameBorder","allow","allowFullScreen","style","display","background","borderRadius","GetMovies","movies","setMovies","search","setSearch","useEffect","movies_fetching","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","required","movie","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAoDeA,EAjDF,SAAC,GAAoE,IAAnEC,EAAkE,EAAlEA,MAAOC,EAA2D,EAA3DA,YAAaC,EAA8C,EAA9CA,SAAUC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,GAEjEC,EAAa,mCAF4D,EAInDC,mBAAS,MAJ0C,mBAIxEC,EAJwE,KAIhEC,EAJgE,KAMzEC,EAAO,6CAAyCL,EAAzC,oDANkE,EAavDE,oBAAS,GAb8C,mBAaxEI,EAbwE,KAalEC,EAbkE,KAgB/E,OACE,yBAAKC,UAAU,SAEd,yBAAKA,UAAU,UAAUC,QAAS,WAAOF,GAAQ,GAXlDG,MAAML,GAASM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAAOV,EAAUU,EAAKC,cAY9D,yBAAKC,IAAKf,EAASL,EAAcqB,IAAI,WACrC,yBAAKT,UAAU,YAAYX,IAE9B,4BAAKF,GACN,yBAAKa,UAAU,QAAO,8BAAOV,EAAaoB,QAAQ,IAAlD,KAA8D,2BAAInB,IAEhE,kBAACoB,EAAA,EAAD,CAAOb,KAAMA,EAAMc,QAAS,kBAAMb,GAAQ,KACxC,kBAACc,EAAA,EAAD,CAAKC,GAhBG,CAAEC,SAAU,WAAYC,IAAK,MAAMC,KAAM,MAAOC,UAAW,wBAC3DC,MAAO,IAAKC,QAAS,mBAAoBC,OAAQ,iBAAkBC,UAAW,GAAIC,EAAG,IAgB3F,yBAAKvB,UAAU,aAEXL,GAAUA,EAAO6B,KAAI,SAAAC,GACrB,GAAmB,qBAAfA,EAAMC,KACR,OAAQ,4BAAQP,MAAM,MAAMQ,OAAO,MAAMnB,IAAG,wCAAmCiB,EAAMG,KAAOzC,MAAM,UAAUyC,IAAKH,EAAMG,IAAKC,YAAY,IAAIC,MAAM,iFAAiFC,iBAAe,OAGtP,6BACA,yBAAKC,MAAO,CAACC,QAAQ,OAAQC,WAAW,UAAYC,aAAa,QAC/D,yBAAK3B,IAAKf,EAASL,EAAauC,OAAO,MAAMlB,IAAI,SAAStB,MAAM,WACjE,yBAAKa,UAAU,aAAf,KAA8BX,EAA9B,WCNE+C,EA/BE,WAGjB,IAHsB,EAMQ1C,mBAAS,IANjB,mBAMb2C,EANa,KAMNC,EANM,OAOQ5C,mBAAS,IAPjB,mBAOb6C,EAPa,KAONC,EAPM,KASpBC,qBAAU,WACRC,MAAuB,IAEvB,IAAMA,EAAiB,WAClBxC,MAVM,0IAUQC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAAOgC,EAAUhC,EAAKC,aAMxE,OACE,yBAAKP,UAAU,aACb,0BAAO2C,SANU,SAACC,GACnBA,EAAEC,iBACF3C,MAbU,oGAaMqC,GAAQpC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAAOgC,EAAUhC,EAAKC,cAK3E,2BAAOuC,KAAK,SAASC,YAAY,gBAAgBC,MAAOT,EAAQU,SAAU,SAACL,GAAD,OAAKJ,EAAUI,EAAEM,OAAOF,QAAQG,UAAQ,IAClH,4BAAQL,KAAK,UAAb,WAEC,oEACD,yBAAK9C,UAAU,cAAf,WAA8BqC,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAQb,KAAI,SAAA4B,GAAK,OAAI,kBAAC,EAAD,eAAOxB,IAAKwB,EAAM5D,IAAQ4D,UCjBnEC,MARf,WACE,OACE,yBAAKrD,UAAU,OACb,kBAAC,EAAD,QCHNsD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.766b403b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {Modal, Box}from '@mui/material';\r\n\r\nconst Movie =({title ,poster_path ,overview ,vote_average ,release_date ,id }) =>{ \r\n\r\n  const imageApi =   'https://image.tmdb.org/t/p/w1280' ;      //get the poster using poster_path (this API docs)\r\n  \r\n  const [videos, setVideos] = useState(null);        //store movie's videos  \r\n  //fetch videos endpoint using movie id\r\n  const trailer = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=8b3086d8cc10f509a461783c237dd937` ;  \r\n  const getTrailer = () => {                         \r\n    fetch(trailer).then(res => res.json()).then(data=>{setVideos(data.results) })}  ; \r\n    \r\n  //Modal styling\r\n  const style = { position: 'absolute', top: '50%',left: '50%', transform: 'translate(-50%, -50%)',\r\n                width: 600, bgcolor: 'background.paper', border: '2px solid #000', boxShadow: 24, p: 4, };   \r\n  const [open, setOpen] = useState(false); //store if modal is open or closed    \r\n  \r\n  //show the movie title, poster, overview, vote_average for each item from API & show modal onclick\r\n  return (                   \r\n    <div className=\"Movie\">\r\n\r\n     <div className='contain' onClick={() => {setOpen(true); getTrailer(); }}> \r\n        <img src={imageApi+poster_path}  alt='poster' />\r\n        <div className='overview'>{overview}</div>\r\n     </div>\r\n     <h1>{title}</h1>\r\n    <div className='rate'><span>{vote_average.toFixed(1)}</span>  <p>{release_date}</p></div> \r\n\r\n      <Modal open={open} onClose={() => setOpen(false)}  >\r\n        <Box sx={style}>        \r\n          <div className='modalData'>\r\n            {/* check the movie videos & map through it , if official trailer return it in iframe youtube */}  \r\n            { videos && videos.map(video=>{\r\n              if (video.name === \"Official Trailer\"){               \r\n                return( <iframe width=\"560\" height=\"315\" src={`https://www.youtube.com/embed/${video.key}`} title=\"trailer\" key={video.key} frameBorder=\"0\" allow=\"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>  )  }   \r\n                }) } \r\n\r\n            <br />\r\n            <div style={{display:'flex', background:'#E9ECEF' , borderRadius:'7px'}}>\r\n              <img src={imageApi+poster_path} height=\"160\" alt='poster' title='poster' />              \r\n             <div className='modalText'>  {overview} </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </Box>\r\n      </Modal>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movie;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React , { useState , useEffect } from 'react';\r\nimport Movie from './Movie' ;\r\n\r\nconst GetMovies =() =>{ \r\n\r\n  //data from the API website\r\nconst getApi = 'https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&include_video=true&api_key=8b3086d8cc10f509a461783c237dd937&page=1'  ;\r\nconst searchApi = `https://api.themoviedb.org/3/search/movie?&api_key=8b3086d8cc10f509a461783c237dd937&page=1&query=`  ;\r\n  \r\n  const [movies,setMovies]  = useState([]) ;       //store api data\r\n  const [search,setSearch]  = useState('') ;       //store search value\r\n\r\n  useEffect(() => {                         //render the api fetch function\r\n    movies_fetching();  }, []) ;\r\n\r\n    const movies_fetching= ()=>{              //fetch api using fetch & promises\r\n         fetch(getApi).then(res => res.json()).then(data=>{setMovies(data.results) }) ;  }   \r\n\r\n   const handleSubmit =(e) =>{              //function of sumbit search by fetching search api\r\n     e.preventDefault();\r\n     fetch(searchApi+search).then(res => res.json()).then(data=>{setMovies(data.results);  }) ;  } \r\n        \r\n  return (                           //search form and pass api data as props\r\n    <div className=\"GetMovies\">\r\n      <form  onSubmit={handleSubmit}>\r\n     <input type=\"search\" placeholder=\"search movies\" value={search} onChange={(e)=>setSearch(e.target.value)} required/>\r\n     <button type=\"submit\" >Search</button>\r\n      </form>\r\n      <h2>Trending Movies / Search reasults : </h2>\r\n     <div className='moviesList'> {movies?.map(movie => <Movie key={movie.id} {...movie}/>) }</div> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GetMovies;\r\n","import React from 'react';\nimport './App.css';\nimport GetMovies from './components/GetMovies';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GetMovies />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}